import { Neo4jGraphQL } from '@neo4j/graphql'
import { typeDefs } from './graphql-schema'
import permissions from './permissions'
import dotenv from 'dotenv'
import neo4j from 'neo4j-driver'

/*
 * Create an executable GraphQL schema object from GraphQL type definitions
 * including autogenerated queries and mutations.
 * Read more in the docs:
 * https://neo4j.com/docs/graphql-manual/current/
 */
dotenv.config()

/*
 * Create a Neo4j driver instance to connect to the database
 * using credentials specified as environment variables
 * with fallback to defaults
 */
const driver = neo4j.driver(process.env.NEO4J_URI || 'bolt://localhost:7687', neo4j.auth.basic(process.env.NEO4J_USER || 'neo4j', process.env.NEO4J_PASSWORD || 'neo4j'))

/*
 * Create an executable GraphQL schema object from GraphQL type definitions
 * including autogenerated queries and mutations.
 * Read more in the docs:
 * https://neo4j.com/docs/graphql-manual/current/
 */
export const neoSchema = new Neo4jGraphQL({
  typeDefs,
  permissions,
  config: {
    jwt: {
      secret: process.env.JWT_SECRET,
      rolesPath: 'https://auth0.radiator.com/claims\\.https://auth0.radiator.com/claims/roles',
    },
  },
  driver,
})
